spring:
  application.name: recommendation

  data:
    mongodb:
      host: ${app.database.host}
      port: 27017
      database: recommendation-db
      auto-index-creation: true

  rabbitmq:
    host: ${app.messaging.rabbitmq.host}
    port: 5672
    username: guest
    password: guest

  cloud:
    # As Spring Cloud Ribbon is in maintenance mode.
    # It is recommended switching to BlockingLoadBalancerClient instead.
    loadbalancer.ribbon.enabled: false

    # Event-driven messages Stream config
    stream:
      defaultBinder: rabbit
      default.contentType: application/json
      bindings:
        input:
          destination: recommendations
          group: recommendationsGroup
          consumer:
            maxAttempts: 3
            backOffInitialInterval: 500
            backOffMaxInterval: 1000
            backOffMultiplier: 2.0
      rabbit:
        bindings.input.consumer:
          autoBindDlq: true
          republishToDlq: true
      kafka:
        bindings.input.consumer.enableDlq: true
        binder:
          brokers: ${app.messaging.kafka.broker}
          defaultBrokerPort: 9092

server:
  port: 9082
  error:
    include-message: always
    include-binding-errors: always

logging.level:
    web: DEBUG
    root: INFO
    com.siriusxi.ms.store: DEBUG
    org:
      springframework.data.mongodb.core.MongoTemplate: DEBUG
      mongodb: debug

management:
  info.git:
      mode: full
      enabled: true
  endpoints.web.exposure.include: "*"
  endpoint:
    shutdown.enabled: true
    health.show-details: always

app:
  eureka:
    host: localhost
    user: mt
    pass: p
  database:
    host: localhost
  messaging:
    rabbitmq.host: 127.0.0.1
    kafka.broker: 127.0.0.1

# Service discovery configs
eureka:
  instance:
    lease-renewal-interval-in-seconds: 5
    lease-expiration-duration-in-seconds: 5
    prefer-ip-address: true
  client:
    healthcheck.enabled: true
    service-url:
      defaultZone: http://${app.eureka.user}:${app.eureka.pass}@${app.eureka.host}:8761/eureka/
    initial-instance-info-replication-interval-seconds: 5
    registry-fetch-interval-seconds: 5

# This is a docker specific profile properties
# Also profiles could be separated in its owen file
# with file name format of "application-docker.yaml"
---
spring:
  profiles: docker
  jmx.enabled: false

server:
  port: 8080

app:
  eureka:
    host: eureka
  database:
    host: mongodb
  messaging:
    rabbitmq.host: rabbitmq
    kafka.broker: kafka
